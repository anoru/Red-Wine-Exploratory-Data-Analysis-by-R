boxplot_histogram(redwine$volatile.acidity, "Volatile Acidity")
summary(redwine$volatile.acidity)
boxplot_histogram(redwine$citric.acid, "Citric Acid")
summary(redwine$citric.acid)
# length(subset(redwine, citric.acid == 0)$citric.acid)
boxplot_histogram(redwine$residual.sugar, "Residual Sugar")
summary(redwine$residual.sugar)
boxplot_histogram(redwine$chlorides, "Chlorides")
summary(redwine$chlorides)
boxplot_histogram(redwine$free.sulfur.dioxide, "Free Sulphur Dioxide")
summary(redwine$free.sulfur.dioxide)
boxplot_histogram(redwine$total.sulfur.dioxide, "Total Sulfur Dioxide")
summary(redwine$total.sulfur.dioxide)
boxplot_histogram(redwine$density, "Density")
summary(redwine$density)
boxplot_histogram(redwine$pH, "PH")
summary(redwine$pH)
boxplot_histogram(redwine$sulphates, "sulphates")
summary(redwine$sulphates)
boxplot_histogram(redwine$alcohol, "Alcohol")
summary(redwine$alcohol)
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
# make the quality numeric so it doesnt' get ignored in the coorelation graph
redwine$quality<- as.numeric(redwine$quality)
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
# Create a function to generate boxplots
get_bivariate_boxplot <- function(x, y, ylab) {
return(ggplot(aes(factor(x), y), data = redwine) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y=mean, shape=1, col = 'red',
geom = 'point', size = 1) +
ylab(ylab))
}
# Create boxplots and arrange them
grid.arrange(get_bivariate_boxplot(redwine$rating, redwine$fixed.acidity,
'fixed acidity'),
get_bivariate_boxplot(redwine$rating, redwine$volatile.acidity,
'volatile acidity'),
get_bivariate_boxplot(redwine$rating, redwine$citric.acid,
'citric acid'),
get_bivariate_boxplot(redwine$rating, redwine$residual.sugar,
'residual sugar'),
get_bivariate_boxplot(redwine$rating, redwine$chlorides,
'chlorides'),
get_bivariate_boxplot(redwine$rating, redwine$free.sulfur.dioxide,
'free sulf. dioxide'),
get_bivariate_boxplot(redwine$rating,
redwine$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(redwine$rating, redwine$density,
'density'),
get_bivariate_boxplot(redwine$rating, redwine$pH,
'pH'),
get_bivariate_boxplot(redwine$rating, redwine$sulphates,
'sulphates'),
get_bivariate_boxplot(redwine$rating, redwine$alcohol,
'alcohol'),
ncol = 3)
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
# function to return correlation
cor_test <- function(x, y) {
return(cor(as.numeric(x), as.numeric(y)))
}
# calculate normal correlations
correlations <- c(
cor_test(redwine$fixed.acidity, redwine$quality),
cor_test(redwine$volatile.acidity, redwine$quality),
cor_test(redwine$citric.acid, redwine$quality),
cor_test(redwine$residual.sugar, redwine$quality),
cor_test(redwine$chlorides, redwine$quality),
cor_test(redwine$free.sulfur.dioxide, redwine$quality),
cor_test(redwine$total.sulfur.dioxide, redwine$quality),
cor_test(redwine$density, redwine$quality),
cor_test(redwine$pH, redwine$quality),
cor_test(redwine$sulphates, redwine$quality),
cor_test(redwine$alcohol, redwine$quality))
names(correlations) <- c('fixed.acidity', 'volatile.acidity', 'citric.acid',
'residual.sugar', 'chlordies', 'free.sulfur.dioxide',
'total.sulfur.dioxide', 'density', 'pH',
'sulphates', 'alcohol')
# calculate correlation on log10
correlations_log10 <- c(
cor_test(log10(redwine$fixed.acidity), redwine$quality),
cor_test(log10(redwine$volatile.acidity), redwine$quality),
cor_test(log10(redwine$citric.acid), redwine$quality),
cor_test(log10(redwine$residual.sugar), redwine$quality),
cor_test(log10(redwine$chlorides), redwine$quality),
cor_test(log10(redwine$free.sulfur.dioxide), redwine$quality),
cor_test(log10(redwine$total.sulfur.dioxide), redwine$quality),
cor_test(log10(redwine$density), redwine$quality),
cor_test(log10(redwine$pH), redwine$quality),
cor_test(log10(redwine$sulphates), redwine$quality),
cor_test(log10(redwine$alcohol), redwine$quality))
names(correlations_log10) <- c('fixed.acidity', 'volatile.acidity', 'citric.acid',
'residual.sugar', 'chlordies', 'free.sulfur.dioxide',
'total.sulfur.dioxide', 'density', 'pH',
'sulphates', 'alcohol')
correlations
correlations_log10
redwine$quality <- factor(redwine$quality, ordered = T)
grid.arrange(
ggplot(data = redwine, aes(x = volatile.acidity, y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = log10(sulphates), y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = volatile.acidity, y = log10(sulphates))) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = log10(sulphates))) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = volatile.acidity)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ncol = 2)
m1 <- lm(as.numeric(quality) ~ alcohol, data = subset(redwine, citric.acid == 0))
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + I(log10(sulphates)))
m4 <- update(m3, ~ . + citric.acid + chlorides + density + pH)
mtable(m1, m2, m3, m4)
summary(m3)
ggplot(data = redwine, aes(x = quality)) +
geom_bar(width = 1, color = 'white', fill = 'blue') +
geom_vline(xintercept = median(as.numeric(redwine$quality)), color = "red") +
labs(x = "Quality of wine",
y = "Number of simples",
title = "Distribution of wine Quality")
summary(redwine$quality)
ggplot(data = redwine, aes(x = factor(quality), y = alcohol, fill = rating)) +
geom_jitter(alpha = .3)  +
geom_boxplot(alpha = .5, color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
size = 1) +
geom_hline(yintercept = 11, linetype="dashed") +
labs(x = "Quality",
y = "Alcohol (% by Volume)",
title = "Effect of Alcohol on Wine Quality")
cor.test(redwine$alcohol, as.numeric(redwine$quality))
by(redwine$alcohol, redwine$rating, summary)
ggplot(data = subset(redwine, rating != 'average'),
aes(x = volatile.acidity, y = alcohol, color = rating)) +
geom_jitter(size = 2, alpha = 1/2) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, size = 1) +
labs(x = "Volatile Acidity (g/dm^3)",
y = "Alcohol (% by Volume)",
title = "Alcohol vs. Volatile Acidity on Wine Quality")
redwine$acceptable <- redwine$quality > 5
is_test <- runif(nrow(redwine)) > 0.75
training <- redwine[is_test == FALSE,]
testing <- redwine[is_test == TRUE,]
summary(fit <- glm(as.numeric(quality) ~ alcohol + volatile.acidity +
I(log10(sulphates)) + citric.acid + chlorides +
density + pH , data = training))
library(ROCR)
prob <- predict(fit, newdata = testing, type = "response")
pred <- prediction(prob, testing$acceptable)
perf <- performance(pred, measure = "tpr", x.measure = "fpr")
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) +
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc)) +
geom_abline(linetype='dashed')
library(ggplot2)
library(dplyr)
library(gridExtra)
library(RColorBrewer)
library(lattice)
library(scales)
library(memisc)
library(reshape)
library(sandwich)
library(GGally)
library(graphics)
# Load the Data
redwine <- read.csv('wineQualityReds.csv')
str(redwine)
summary(redwine)
#Transforming Quality from an Integer to a Factor
redwine$quality <- factor(redwine$quality, ordered = T)
#Creating a new Factored Variable called 'Rating'
redwine$rating <- ifelse(redwine$quality < 5, 'bad', ifelse(
redwine$quality < 7, 'average', 'good'))
redwine$rating <- ordered(redwine$rating,
levels = c('bad', 'average', 'good'))
# Create some functions to not write too much code #
# Find the outlier line, which is 3.5 standard deviations
# more than the median of the variable.
positive_outlier_line <- function(variable) {
return (geom_hline(yintercept = (median(variable) + sd(variable)*3.5),
alpha = 1/3, linetype = 2))
}
# Find the median to project in the histogram
median_histogram <- function(variable) {
return(geom_vline(xintercept = median(variable),
color = "red", alpha = 1/3))
}
# Create a boxplot and two histograms (normal, log10)
# The 'variable_name' is used to label the axis.
boxplot_histogram <- function(variable, variable_name) {
return (grid.arrange(
ggplot(aes(x = 1, y = variable), data = redwine) +
geom_jitter(alpha = 0.1) +
geom_boxplot(alpha = 0.2, color = 'blue') +
stat_summary(fun.y=mean, shape=1, col = 'red', geom = 'point') +
positive_outlier_line(variable) +
ylab(variable_name),
ggplot(aes(variable), data = redwine) +
geom_histogram(bins=30, color = 'white') +
median_histogram(variable) +
labs(x = variable_name),
ggplot(aes(log10(variable)), data = redwine) +
geom_histogram(bins=30, color = 'white') +
labs(x = paste("log10", variable_name)),
ncol=3))
}
grid.arrange(ggplot(data = redwine, aes(x = quality)) +
geom_bar(width = 1, color = 'white'),
ggplot(data = redwine, aes(x = rating)) +
geom_bar(width = 1, color = 'white'),
ncol = 2)
summary(redwine$quality)
boxplot_histogram(redwine$fixed.acidity, "Fixed Acidity")
summary(redwine$fixed.acidity)
boxplot_histogram(redwine$volatile.acidity, "Volatile Acidity")
summary(redwine$volatile.acidity)
boxplot_histogram(redwine$citric.acid, "Citric Acid")
summary(redwine$citric.acid)
# length(subset(redwine, citric.acid == 0)$citric.acid)
boxplot_histogram(redwine$residual.sugar, "Residual Sugar")
summary(redwine$residual.sugar)
boxplot_histogram(redwine$chlorides, "Chlorides")
summary(redwine$chlorides)
boxplot_histogram(redwine$free.sulfur.dioxide, "Free Sulphur Dioxide")
summary(redwine$free.sulfur.dioxide)
boxplot_histogram(redwine$total.sulfur.dioxide, "Total Sulfur Dioxide")
summary(redwine$total.sulfur.dioxide)
boxplot_histogram(redwine$density, "Density")
summary(redwine$density)
boxplot_histogram(redwine$pH, "PH")
summary(redwine$pH)
boxplot_histogram(redwine$sulphates, "sulphates")
summary(redwine$sulphates)
boxplot_histogram(redwine$alcohol, "Alcohol")
summary(redwine$alcohol)
# make the quality numeric so it doesnt' get ignored in the coorelation graph
redwine$quality<- as.numeric(redwine$quality)
ggcorr(redwine %>%
dplyr::select(-X) %>%
dplyr::select(-rating), # we could easily use this redwine[, 2:13]
hjust = 0.60,
size = 3,
label = TRUE,
label_alpha = TRUE,
geom = "circle",
max_size = 7,
size = 3,
hjust = 0.75,
angle = 0,
palette = "RdBu")+
ggplot2::labs(title = "Correlation graph between variables")
# Create a function to generate boxplots
get_bivariate_boxplot <- function(x, y, ylab) {
return(ggplot(aes(factor(x), y), data = redwine) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y=mean, shape=1, col = 'red',
geom = 'point', size = 1) +
ylab(ylab))
}
# Create boxplots and arrange them
grid.arrange(get_bivariate_boxplot(redwine$rating, redwine$fixed.acidity,
'fixed acidity'),
get_bivariate_boxplot(redwine$rating, redwine$volatile.acidity,
'volatile acidity'),
get_bivariate_boxplot(redwine$rating, redwine$citric.acid,
'citric acid'),
get_bivariate_boxplot(redwine$rating, redwine$residual.sugar,
'residual sugar'),
get_bivariate_boxplot(redwine$rating, redwine$chlorides,
'chlorides'),
get_bivariate_boxplot(redwine$rating, redwine$free.sulfur.dioxide,
'free sulf. dioxide'),
get_bivariate_boxplot(redwine$rating,
redwine$total.sulfur.dioxide,
'total sulf. dioxide'),
get_bivariate_boxplot(redwine$rating, redwine$density,
'density'),
get_bivariate_boxplot(redwine$rating, redwine$pH,
'pH'),
get_bivariate_boxplot(redwine$rating, redwine$sulphates,
'sulphates'),
get_bivariate_boxplot(redwine$rating, redwine$alcohol,
'alcohol'),
ncol = 3)
ggplot(data = redwine, aes(x = fixed.acidity, y = citric.acid)) +
geom_point() +
geom_smooth(method = "lm")
cor.test(redwine$fixed.acidity, redwine$citric.acid)
ggplot(data = redwine, aes(x = volatile.acidity, y = citric.acid)) +
geom_point() +
geom_smooth(method = "lm")
cor.test(redwine$volatile.acidity, redwine$citric.acid)
# function to return correlation
cor_test <- function(x, y) {
return(cor(as.numeric(x), as.numeric(y)))
}
# calculate normal correlations
correlations <- c(
cor_test(redwine$fixed.acidity, redwine$quality),
cor_test(redwine$volatile.acidity, redwine$quality),
cor_test(redwine$citric.acid, redwine$quality),
cor_test(redwine$residual.sugar, redwine$quality),
cor_test(redwine$chlorides, redwine$quality),
cor_test(redwine$free.sulfur.dioxide, redwine$quality),
cor_test(redwine$total.sulfur.dioxide, redwine$quality),
cor_test(redwine$density, redwine$quality),
cor_test(redwine$pH, redwine$quality),
cor_test(redwine$sulphates, redwine$quality),
cor_test(redwine$alcohol, redwine$quality))
names(correlations) <- c('fixed.acidity', 'volatile.acidity', 'citric.acid',
'residual.sugar', 'chlordies', 'free.sulfur.dioxide',
'total.sulfur.dioxide', 'density', 'pH',
'sulphates', 'alcohol')
# calculate correlation on log10
correlations_log10 <- c(
cor_test(log10(redwine$fixed.acidity), redwine$quality),
cor_test(log10(redwine$volatile.acidity), redwine$quality),
cor_test(log10(redwine$citric.acid), redwine$quality),
cor_test(log10(redwine$residual.sugar), redwine$quality),
cor_test(log10(redwine$chlorides), redwine$quality),
cor_test(log10(redwine$free.sulfur.dioxide), redwine$quality),
cor_test(log10(redwine$total.sulfur.dioxide), redwine$quality),
cor_test(log10(redwine$density), redwine$quality),
cor_test(log10(redwine$pH), redwine$quality),
cor_test(log10(redwine$sulphates), redwine$quality),
cor_test(log10(redwine$alcohol), redwine$quality))
names(correlations_log10) <- c('fixed.acidity', 'volatile.acidity', 'citric.acid',
'residual.sugar', 'chlordies', 'free.sulfur.dioxide',
'total.sulfur.dioxide', 'density', 'pH',
'sulphates', 'alcohol')
correlations
correlations_log10
redwine$quality <- factor(redwine$quality, ordered = T)
grid.arrange(
ggplot(data = redwine, aes(x = volatile.acidity, y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = log10(sulphates), y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = alcohol)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = volatile.acidity, y = log10(sulphates))) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = log10(sulphates))) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ggplot(data = redwine, aes(x = citric.acid, y = volatile.acidity)) +
facet_wrap(~rating) +
geom_point(aes(color = quality)),
ncol = 2)
m1 <- lm(as.numeric(quality) ~ alcohol, data = subset(redwine, citric.acid == 0))
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + I(log10(sulphates)))
m4 <- update(m3, ~ . + citric.acid + chlorides + density + pH)
mtable(m1, m2, m3, m4)
summary(m3)
ggplot(data = redwine, aes(x = quality)) +
geom_bar(width = 1, color = 'white', fill = 'blue') +
geom_vline(xintercept = median(as.numeric(redwine$quality)), color = "red") +
labs(x = "Quality of wine",
y = "Number of simples",
title = "Distribution of wine Quality")
summary(redwine$quality)
ggplot(data = redwine, aes(x = factor(quality), y = alcohol, fill = rating)) +
geom_jitter(alpha = .3)  +
geom_boxplot(alpha = .5, color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
size = 1) +
geom_hline(yintercept = 11, linetype="dashed") +
labs(x = "Quality",
y = "Alcohol (% by Volume)",
title = "Effect of Alcohol on Wine Quality")
cor.test(redwine$alcohol, as.numeric(redwine$quality))
by(redwine$alcohol, redwine$rating, summary)
ggplot(data = subset(redwine, rating != 'average'),
aes(x = volatile.acidity, y = alcohol, color = rating)) +
geom_jitter(size = 2, alpha = 1/2) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, size = 1) +
labs(x = "Volatile Acidity (g/dm^3)",
y = "Alcohol (% by Volume)",
title = "Alcohol vs. Volatile Acidity on Wine Quality")
redwine$acceptable <- redwine$quality > 5
is_test <- runif(nrow(redwine)) > 0.75
training <- redwine[is_test == FALSE,]
testing <- redwine[is_test == TRUE,]
summary(fit <- glm(as.numeric(quality) ~ alcohol + volatile.acidity +
I(log10(sulphates)) + citric.acid + chlorides +
density + pH , data = training))
library(ROCR)
prob <- predict(fit, newdata = testing, type = "response")
pred <- prediction(prob, testing$acceptable)
perf <- performance(pred, measure = "tpr", x.measure = "fpr")
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
roc.data <- data.frame(fpr=unlist(perf@x.values),
tpr=unlist(perf@y.values),
model="GLM")
ggplot(roc.data, aes(x=fpr, ymin=0, ymax=tpr)) +
geom_ribbon(alpha=0.2) +
geom_line(aes(y=tpr)) +
ggtitle(paste0("ROC Curve w/ AUC=", auc)) +
geom_abline(linetype='dashed')
ggplot(data = redwine, aes(x = fixed.acidity, y = citric.acid)) +
geom_point(alpha = 1/2) +
geom_smooth(method = "lm")
cor.test(redwine$fixed.acidity, redwine$citric.acid)
ggplot(data = redwine, aes(x = fixed.acidity, y = citric.acid)) +
geom_point(alpha = 1/3) +
geom_smooth(method = "lm")
ggplot(data = redwine, aes(x = fixed.acidity, y = citric.acid)) +
geom_point(alpha = 1/4) +
geom_smooth(method = "lm")
ggplot(data = redwine, aes(x = volatile.acidity, y = citric.acid)) +
geom_point(alpha = 1/4) +
geom_smooth(method = "lm")
